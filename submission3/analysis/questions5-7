if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, dplyr, lubridate, stringr, readxl, data.table, gdata,)

#Read data before the questions 
HCRIS_Data_v1996 <- readRDS('data/output/HCRIS_Data_v1996.rds')
HCRIS_Data_v2010 <- readRDS('data/output/HCRIS_Data_v2010.rds')
HCRIS_Data <- readRDS('data/output/HCRIS_Data.rds')

# Calculate discount factor and estimated prices
price_data <- HCRIS_Data %>%
  mutate(discount_factor = 1 - tot_discounts / tot_charges,
         price_num = (ip_charges + icu_charges + ancillary_charges) * discount_factor - tot_mcare_payment,
         price_denom = tot_discharges - mcare_discharges,
         price = price_num/price_denom)

    

# Filter out outliers and negative prices
price_data <- price_data %>%
  filter(!is.na(price_denom)) 
  
# Question 5
data_2012 <- price_data %>%
  filter(year == 2012)

# Create a new variable 'penalty' based on the sum of HRRP and HVBP amounts
data_2012 <- data_2012 %>%
  mutate( hvbp_payment = ifelse(is.na(hvbp_payment),0,hvbp_payment),
          hrrp_payment = ifelse(is.na(hrrp_payment),0,abs(hrrp_payment)), #<<
    penalty = ifelse(hvbp_payment-hrrp_payment<0, 1, 0 )) #<<


# Calculate average price for penalized and non-penalized hospitals, excluding NA values
average_price <- data_2012 %>%
  group_by(penalty) %>%
  summarise(average_price = mean(price, na.rm = TRUE))

# Print the results
print(average_price)

# Question 6
# Calculate quartiles based on bed size
data_2012 <- mutate(data_2012, quartile = ntile(beds, 4))

# Create indicator variables for each quartile
data_2012 <- mutate(data_2012,
                    quartile_1 = ifelse(quartile == 1, 1, 0),
                    quartile_2 = ifelse(quartile == 2, 1, 0),
                    quartile_3 = ifelse(quartile == 3, 1, 0),
                    quartile_4 = ifelse(quartile == 4, 1, 0))

# Create quartiles
data_2012 <- data_2012 %>%
mutate(quartile_1 = ifelse(beds <= quantile
(data_2012$beds, 0.25, na.rm =TRUE), 1, 0)) %>%
mutate(quartile_2 = ifelse(beds <= quantile
(data_2012$beds, 0.5, na.rm =TRUE)& beds > quantile
(data_2012$beds, 0.25, na.rm =TRUE), 1, 0)) %>%
mutate(quartile_3 = ifelse(beds <= quantile
(data_2012$beds, 0.75, na.rm =TRUE)& beds > quantile
(data_2012$beds, 0.5, na.rm =TRUE), 1, 0)) %>%
mutate(quartile_4 = ifelse(beds <= quantile
(data_2012$beds, 0.75, na.rm =TRUE), 1, 0)) 

table(data_2012$quartile_1)

q1_mean <- data_2012%>%
filter(quartile_1 == 1 )%>%
group_by(penalty)%>%
summarise(first_mean = mean(price, na.rm=TRUE))

q2_mean <- data_2012%>%
filter(quartile_2 == 1 )%>%
group_by(penalty)%>%
summarise(second_mean = mean(price, na.rm=TRUE))

q3_mean <- data_2012%>%
filter(quartile_3 == 1 )%>%
group_by(penalty)%>%
summarise(third_mean = mean(price, na.rm=TRUE))

q4_mean <- data_2012%>%
filter(quartile_4 == 1 )%>%
group_by(penalty)%>%
summarise(fourth_mean = mean(price, na.rm=TRUE))

q1_mean%>%
left_join(q2_mean, by = "penalty")%>%
left_join(q3_mean, by = "penalty")%>%
left_join(q4_mean, by = "penalty")

# Question 7
#nearest neighbor matching
data_2012 <- data_2012 %>%
  filter(!is.na(beds)) %>%
  mutate(bed_size_quartile = ntile(beds, 4))


lp.vars <- data_2012 %>% 
  select(beds, penalty, price, quartile_1, quartile_2, quartile_3, quartile_4) 
lp.covs <- lp.vars %>% select(quartile_1, quartile_2, quartile_3, quartile_4) 

m.nn.var <- Matching::Match(Y=lp.vars$price,
                            Tr=lp.vars$penalty,
                            X=lp.covs,
                            M=1,  #<<
                            Weight=1,
                            estimand="ATE")

nearest_neighbor <- summary(m.nn.var)


#mahalanobis
m.nn.md <- Matching::Match(Y=lp.vars$price,
                           Tr=lp.vars$penalty,
                           X=lp.covs,
                           M=1,
                           Weight=2,
                           estimand="ATE")                           

mahalanobis <- summary(m.nn.md)

#IPW
#calculate ps
logit.model <- glm(penalty ~ quartile_1 + quartile_2 + 
                  quartile_3 + quartile_4, family=binomial, data=lp.vars)
ps <- fitted(logit.model)

lp.vars <- lp.vars %>%
  mutate(ipw = case_when(
    penalty==1 ~ 1/ps,
    penalty==0 ~ 1/(1-ps),
    TRUE ~ NA_real_
  ))
mean.t1 <- lp.vars %>% filter(penalty==1) %>%
  select(price, ipw) %>% summarize(mean_p=weighted.mean(price,w=ipw))
mean.t0 <- lp.vars %>% filter(penalty==0) %>%
  select(price, ipw) %>% summarize(mean_p=weighted.mean(price,w=ipw))

m.nn.ps <- mean.t1$mean_p - mean.t0$mean_p


#linear regression
reg.dat <- lp.vars %>% ungroup() %>%
  mutate(beds_diff1 = penalty*(quartile_1 - mean(quartile_1))) %>%
  mutate(beds_diff2 = penalty*(quartile_2 - mean(quartile_2))) %>%
  mutate(beds_diff3 = penalty*(quartile_3 - mean(quartile_3))) %>%
  mutate(beds_diff4 = penalty*(quartile_4 - mean(quartile_4))) 
reg <- lm(price ~ penalty + quartile_1 + quartile_2 + quartile_3 + quartile_4 + 
            beds_diff1 + beds_diff2 + beds_diff3 + beds_diff4, 
          data=reg.dat)
linear_reg <- summary(reg)

# Extract ATE estimates
ATE_nn_var <- bal.tab(m.nn.var, covs = lp.covs, treat = lp.vars$penalty)$ATE
ATE_nn_md <- bal.tab(m.nn.md, covs = lp.covs, treat = lp.vars$penalty)$ATE
ATE_nn_ps <- m.nn.ps
ATE_reg <- coef(summary(reg))["penaltyTRUE", "Estimate"]

# Create a data frame for the results
estimand_table <- data.frame(
  Estimator = c("Nearest Neighbor (Inverse Variance Distance)", 
                "Nearest Neighbor (Mahalanobis Distance)", 
                "Inverse Propensity Weighting", 
                "Simple Linear Regression"),
  ATE = c(ATE_nn_var, ATE_nn_md, ATE_nn_ps, ATE_reg)
)
estimand_table